1.
Tests
(PAD 0)
1
(PAD 1)
1
(PAD 2)
1
(PAD 3)
2
(PAD 4)
2
(PAD 5)
3
(PAD 6)
4
(PAD 7)
5
(PAD 8)
7
(PAD 9)
9
(PAD 10)
12
Also I when I tried with larger n value, the program got slower and slower. 
When n is very large, there is a stack overflow.
Reason: The program is not tail-recursive, so the stack will grow after 
every recursive call.

2.
Tests
(SUMS 0)
0
(SUMS 1)
0
(SUMS 2)
0
(SUMS 3)
1
(SUMS 4)
1
(SUMS 5)
2
(SUMS 6)
3
(SUMS 7)
4
(SUMS 8)
6
(SUMS 9)
8
(SUMS 10)
11
The trend is: SUMS(n) = PAD(n) - 1.
We can also prove it by induction:
Base case: 
SUMS(0) = PAD(0) - 1 
SUMS(1) = PAD(1) - 1 
SUMS(2) = PAD(2) - 1
Assume, for all k<n:
SUMS(k) = PAD(k) - 1.
We have:
SUMS(n) = SUMS(n-2)+SUMS(n-3)+1
= (PAD(n-2)-1)+(PAD(n-3)-1)+1
= PAD(n-2)+PAD(n-3)-1
= PAD(n) - 1

3.
Tests
(ANON '42)
?
(ANON 'FOO)
?
(ANON '(((L E) F) T))
(((? ?) ?) ?)
(ANON '(5 FOO 3.1 -0.2))
(? ? ? ?)
(ANON '(1 (FOO 3.1) -0.2))
(? (? ?) ?)
(ANON '(((1 2) (FOO 3.1)) (BAR -0.2)))
(((? ?) (? ?)) (? ?))
(ANON '(R (I (G (H T)))))
(? (? (? (? ?))))
